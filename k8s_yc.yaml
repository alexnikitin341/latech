apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${GAME_NAME}
spec:
  replicas: ${REPLICAS}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ${GAME_NAME}
  template:
    metadata:
      labels:
        app: ${GAME_NAME}
    spec:
      imagePullSecrets:
      - name: codenrock
      containers:
        - name: ${GAME_NAME}
          image: ${IMAGE_NAME}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              memory: 128Mi
            
        # HACK: ALB has a race condition between deregistering endpoint and pod termination.
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "300"]
      terminationGracePeriodSeconds: 180
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${GAME_NAME}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    cert-manager.io/issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  labels:
    app: ${GAME_NAME}
spec:
  tls:
    - hosts:
      - ${HOST_NAME}
      secretName: ${GAME_NAME}-tls
  rules:
    - host: ${HOST_NAME}
      http:
        paths:
          - path: ${URI}(/|$)(.*)
            backend:
              serviceName: ${GAME_NAME}
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ${GAME_NAME}
  name: ${GAME_NAME}
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: ${GAME_NAME}
  type: ClusterIP
